DONE THIS CHECKIN:
P1 normalize language around comments and annotations either being owned by a node, or begin associated to a node.
P1 normalize capitalization of "Humon"
P1 add some collection-gathering member functions to C++ API.
P1 ditched the legacy dir.
P1 review use of "codepoints" in readme and code.

TODO:
P1 CMake, vcpkg
P1 doxygen
P1 review (and actually validate) code in readme.
P1 much more API testing
P2 consider sorting dict keys and doing BSP search.
P2 allow user to spec index type (int32, int64, etc)
P2 custom memory allocator fns
P2 insertion ops
P2 string value transformers (getDecodedValue())
P2 exceptional C++ version?
P2 hashed dictionary access in C?
